services:
  mongodb:
    # Specifies the MongoDB service
    image: mongo:latest  # Uses the latest MongoDB image from Docker Hub
    container_name: my_mongo_db  # Sets a custom name for the MongoDB container
    restart: always  # Ensures the container restarts automatically if it stops
    ports:
      - "4002:27017"  # Maps port 27017 (MongoDB default) to port 4002 on the host
    volumes:
      - mongodb_data:/data/db  # Persists MongoDB data in a named volume
      - ./database/init_mongo.js:/docker-entrypoint-initdb.d/init_mongo.js:ro  # Mounts an initialization script as read-only
    environment:
      MONGO_INITDB_DATABASE: quiz_db  # Sets the default database name
      MONGO_INITDB_ROOT_USERNAME: admin  # Sets the root username
      MONGO_INITDB_ROOT_PASSWORD: password  # Sets the root password
    networks:
      - app-network  # Connects the MongoDB service to the custom app network

  question_service:
    # Specifies the Question Service
    # Uncomment the following lines to build the container locally
    #build:
       #context: ./question_service  # Path to the build context
       #dockerfile: Dockerfile  # Specifies the Dockerfile to use
    image: smileyjam/question_service:3rdClass  # Uses a prebuilt image from Docker Hub
    container_name: question_service  # Sets a custom name for the Question Service container
    ports:
      - "4000:3000"  # Maps port 3000 (internal) to port 4000 on the host
    networks:
      - app-network  # Connects the Question Service to the custom app network
    depends_on:
      - mongodb  # Ensures MongoDB starts before this service

  submit_service:
    # Specifies the Submit Service
    # Uncomment the following lines to build the container locally
    #build:
     #  context: ./submit_service  # Path to the build context
      # dockerfile: Dockerfile  # Specifies the Dockerfile to use
    image: smileyjam/submit_service:3rdClass  # Uses a prebuilt image from Docker Hub
    container_name: submit_service  # Sets a custom name for the Submit Service container
    ports:
      - "4200:3200"  # Maps port 3200 (internal) to port 4200 on the host
    networks:
      - app-network  # Connects the Submit Service to the custom app network
    depends_on:
      - mongodb  # Ensures MongoDB starts before this service

volumes:
  # Defines named volumes for persistent data storage
  mongodb_data:
    driver: local  # Uses the local driver for volume management

networks:
  # Defines a custom network for inter-service communication
  app-network:
    driver: bridge  # Uses the bridge driver for the network